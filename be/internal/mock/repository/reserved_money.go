// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/repository/reserved_money.go
//
// Generated by this command:
//
//	mockgen -destination internal/mock/repository/reserved_money.go -package=repository_mock -source=internal/app/repository/reserved_money.go ReservedMoneyRepository
//

// Package repository_mock is a generated GoMock package.
package repository_mock

import (
	context "context"
	reflect "reflect"

	persistence "github.com/nnrmps/blue-vending-machine/be/internal/app/persistence"
	gomock "go.uber.org/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockReservedMoneyRepository is a mock of ReservedMoneyRepository interface.
type MockReservedMoneyRepository struct {
	ctrl     *gomock.Controller
	recorder *MockReservedMoneyRepositoryMockRecorder
	isgomock struct{}
}

// MockReservedMoneyRepositoryMockRecorder is the mock recorder for MockReservedMoneyRepository.
type MockReservedMoneyRepositoryMockRecorder struct {
	mock *MockReservedMoneyRepository
}

// NewMockReservedMoneyRepository creates a new mock instance.
func NewMockReservedMoneyRepository(ctrl *gomock.Controller) *MockReservedMoneyRepository {
	mock := &MockReservedMoneyRepository{ctrl: ctrl}
	mock.recorder = &MockReservedMoneyRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReservedMoneyRepository) EXPECT() *MockReservedMoneyRepositoryMockRecorder {
	return m.recorder
}

// GetReservedMoney mocks base method.
func (m *MockReservedMoneyRepository) GetReservedMoney(ctx context.Context, tx *gorm.DB) (map[int64]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReservedMoney", ctx, tx)
	ret0, _ := ret[0].(map[int64]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReservedMoney indicates an expected call of GetReservedMoney.
func (mr *MockReservedMoneyRepositoryMockRecorder) GetReservedMoney(ctx, tx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReservedMoney", reflect.TypeOf((*MockReservedMoneyRepository)(nil).GetReservedMoney), ctx, tx)
}

// UpdateReservedMoney mocks base method.
func (m *MockReservedMoneyRepository) UpdateReservedMoney(ctx context.Context, tx *gorm.DB, reservedMoney persistence.ReservedMoney) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateReservedMoney", ctx, tx, reservedMoney)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateReservedMoney indicates an expected call of UpdateReservedMoney.
func (mr *MockReservedMoneyRepositoryMockRecorder) UpdateReservedMoney(ctx, tx, reservedMoney any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateReservedMoney", reflect.TypeOf((*MockReservedMoneyRepository)(nil).UpdateReservedMoney), ctx, tx, reservedMoney)
}
